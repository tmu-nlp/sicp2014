(define (print-point p)
  (newline)
  (display "(")
  (display (x-point p))
  (display ",")
  (display (y-point p))
  (display ")"))

(define (make-point x y)
  (cons x y))
(define (x-point p) (car p))
(define (y-point p) (cdr p))

(define (make-segment start end)
  (cons start end))
(define (start-segment s) (car s))
(define (end-segment s) (cdr s))

(define (medpoint-segment p)
  (let* ((p1 (start-segment s))
         (p2 (end-segment s))
         (x1 (x-point p1))
         (y1 (y-point p1))
         (x2 (x-point p2))
         (y2 (x-point p2)))
  (make-point (/ (+ x1 x2) 2) (/ (+ y1 y2) 2))))

(define a (make-point -1 2))
(define b (make-point 3 6))
(define c (make-segment a b))
(print-point a)
