#lang racket

; 巨大なシステムにおいて,
; 新しい型や新しい手続きが必要になったときについて考える.
; 
; 以下の3つの場合について考察する.
;  1. ジェネリックな手続きを明示的に定義
;  2. データ主導スタイル
;  3. メッセージパッシングスタイル

#|

; 新しい型の追加
 1. ジェネリックな手続きを明示的に定義
    - 全ての手続きをその型に合うように編集するか,
      その型用の手続きを追加する

 2. データ主導スタイル
    - その型のパッケージを追加する

 3. メッセージパッシングスタイル
    - その型の構成子（生成関数）を追加する

; 新しい型がよく追加されるシステム
 -> 3. メッセージパッシングスタイル


; 新しい手続きの追加
 1. ジェネリックな手続きを明示的に定義
    - その手続きを定義する
      既存の型について網羅的であるか注意すること

 2. データ主導スタイル
    - 既存の各型のパッケージにその手続きを追加する

 3. メッセージパッシングスタイル
    - 依存している型の構成子（生成関数）に
      新しい手続きに対応する演算を追加する

; 新しい手続きがよく追加されるシステム
 -> 2. データ主導スタイル



; |#



