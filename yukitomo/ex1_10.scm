;ex_1_10.scm
(define (A x y)
  (cond ((= y 0) 0)
        ((= x 0) (* 2 y))
        ((= y 1) 2)
        (else (A (- x 1)
                 (A x (- y 1))))))

(A 1 10)
(A 2 4)
(A 3 3)

;f(n) = 2 * n
;(A 0 n) = (* 2 n)
(define (f n) (A 0 n))

;g(n) = 2 ** n
;(A 1 n) = (** 2 n) 
;(A 0 (A 1 (- n 1)))
;(* 2 (A 1 (- n 1)))
;(* 2 (A 0 (A 1 (- n 2))))
;(* 2 (* 2 (A 1 (- n 3))))
;....
;(* 2 (* 2 (* 2 (....(* 2 (A 1 1))))))
;(* 2 (* 2 (* 2 (....(* 2 2)
(define (g n) (A 1 n))

;h(n) = 2 ** (2n)
;(A 2 n) = (** (* 2 n) 2)
;(A 1 (A 2 (- n 1)))
;(** 2 (A 2 (- n 1)))
;(** 2 (A 1 (A 2 (- n 2))))
;(** 2 (** 2 (A 2 (- n 2))))
;(** 2 (** 2 (A 1 (A 2 (- n 3)))))
;(** 2 (** 2 (** 2 (A 2 (- n 3)))))
;(** 2 (** 2 (** 2 ....(** 2 (A 2 1)))))
;(** 2 (** 2 (** 2 ....(** 2 2)))))
(define (h n) (A 2 n))


(define (k n) (* 5 n n))