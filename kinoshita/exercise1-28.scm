(define (smallest-divisor n) (find-divisor n 2))
(define (find-divisor n test-divisor)
    (cond ((> (square test-divisor) n) n)
          ((divides? test-divisor n) test-divisor)
          (else (find-divisor n (next test-divisor)))))
(define (divides? a b) (= (remainder b a) 0))
(define (next n)
    (if (= n 2) 3 (+ n 2)))
(define (timed-prime-test n)
    (newline) (display n) (start-prime-test n (runtime)))
(define (start-prime-test n start-time)
    (if (fast-prime? n 1000)
        (report-prime (- (runtime) start-time))))
(define (report-prime elapsed-time)
    (display "***") (display elapsed-time))
(define (fast-prime? n times)
    (cond ((= times 0) #t)
          ((miller-rabin-test n) (fast-prime? n (- times 1)))
          (else #f)))
(define (miller-rabin-test n)
    (define (try-it a)
        (= (expmod2 a n n) a))
    (try-it (+ 1 (random (- n 1)))))
(define (expmod2 base exp m)
    (cond ((= exp 0) 1)
          ((even? exp)
            (let*
                ((i (expmod2 base (/ exp 2) m))
                (j (remainder (square i) m)))
            (if (and (not (= i 1)) (not (= i (- m 1))) (= j 1))
                0
                j)))
          (else (remainder (* base (expmod2 base (- exp 1) m)) m))))
;gaucheにはruntimeがないので実装
(define (runtime)
    (use srfi-11)
        (let-values (((a b) (sys-gettimeofday)))
        (+ (* a 1000000) b)))

;randomも同様
(define (random x)
    (modulo (sys-random) x))
(define (even? n) (= 0 (remainder n 2)))

(define (search-for-primes a b)
    (cond ((< b a) #f)
        ((even? a) (search-for-primes (+ a 1) b))
        (else
            (begin (timed-prime-test a)
            (search-for-primes (+ a 2) b)))))

(timed-prime-test 15);合成数
;以下カーマイケル数
(timed-prime-test 561)
(timed-prime-test 1105)
(timed-prime-test 1729)
(timed-prime-test 2465)
(timed-prime-test 2821)
(timed-prime-test 6601)
;以下素数
(timed-prime-test 31)
(timed-prime-test 10007)
(timed-prime-test 10009)
